- defaultTab: output
  description: Check a Linux service status and start if it's down.
  executionEnabled: true
  group: Administration/Linux
  id: acc2844d-28be-4cf4-9420-ca9b139ee537
  loglevel: INFO
  name: Start a Service
  nodeFilterEditable: true
  nodefilters:
    dispatch:
      excludePrecedence: false
      keepgoing: true
      rankOrder: ascending
      successOnEmptyNodeFilter: false
      threadcount: '1'
    filter: 'name: node00'
  nodesSelectedByDefault: true
  options:
  - enforced: true
    label: Linux Service
    name: service
    required: true
    value: nginx
    values:
    - mysql
    - nginx
    valuesListDelimiter: ','
  plugins:
    ExecutionLifecycle: null
  scheduleEnabled: false
  sequence:
    commands:
    - description: Get the service status from systemd
      exec: systemctl status ${option.service} | grep "Active" | awk  '''{print $2}'''
        | cat
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            name: status
            regex: (.*)
          type: key-value-data
    - description: 'Now, if the status is "inactive" then restart the service'
      fileExtension: .sh
      interpreterArgsQuoted: false
      script: "# print the service status\necho \"current status is @data.status@\"\
        \n\n# start the service if the stauts is \"inactive\"\nif [ @data.status@\
        \ = 'inactive' ]; then\n    echo \"starting @option.service@...\"\n\tsudo\
        \ systemctl start @option.service@\nelse\n    echo \"System is active, nothing\
        \ to do.\"\n    sudo systemctl status @option.service@ | cat\nfi\n\n# All\
        \ done.\necho \"done\""
      scriptInterpreter: /bin/bash
    keepgoing: true
    strategy: node-first
  uuid: acc2844d-28be-4cf4-9420-ca9b139ee537
